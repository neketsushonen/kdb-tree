import java.awt.*;
import javax.swing.*;
import struct.*;
import java.util.*;
import java.io.*;

/**
 * This type was generated by a SmartGuide.
 */
class IndexSpatioTemporal
    extends JFrame {
  // 0: Seleccionar la region por generar los cambios
  // 1 :Seleccionar la region por consultar
  private int seleccionregion = 0;

  //El contador de tiempo
  private int timeCount = 0;
  private int tipo_consulta = 0;
  private JTree kdbJTree;
  private int pointCount = 0;
  private KDBTree kdbTree;
  private CheckboxGroup cg;
  private JPanel ivjJFrameContentPane = null;
  private JLabel ivjJLabel1 = null;
  private JLabel ivjJLabel2 = null;
  private JPanel ivjPanelNorth = null;
  private JButton ivjb_create = null;
  private JButton ivjb_insertAuto = null;
  private JButton ivjb_insertManual = null;
  private JLabel ivjl_x = null;
  private JLabel ivjl_y = null;
  private JPanel ivjPanelSouth = null;
  private JButton ivjb_setSize = null;
  private JButton ivjb_utilizacion = null;
  private JLabel ivjJLabel3 = null;
  private JLabel ivjJLabel4 = null;
  private JLabel ivjl_rangox = null;
  private JLabel ivjl_rangoy = null;
  private JTextField ivjt_ancho = null;
  private JTextField ivjt_largo = null;
  private JTextField ivjt_rangoX = null;
  private JTextField ivjt_rangoY = null;
  private JTextField ivjt_sizePoint = null;
  private JTextField ivjt_sizeRegion = null;
  IvjEventHandler ivjEventHandler = new IvjEventHandler();
  private JLabel ivjJLabel5 = null;
  private JTextField ivjt_time = null;
  private JTextField ivjt_insertpoint = null;
  private JScrollPane ivjJTreeScrollPanel = null;
  private JTree ivjJTree1 = null;
  private JScrollPane ivjJScrollP_canva = null;
  private JTabbedPane ivjpTablePanel = null;
  private JPanel ivjJP_treeAndOperation = null;
  private JPanel ivjJPanel1 = null;
  private JPanel ivjJPanel2 = null;
  private JPanel ivjJPanel21 = null;
  private GridLayout ivjJPanel1GridLayout = null;
  private JButton ivjb_increseTime = null;
  private JLabel ivjJLabel6 = null;
  private JLabel ivjJLabel61 = null;
  private JLabel ivjJLabel7 = null;
  private JLabel ivjJLabel71 = null;
  private JLabel ivjJLabel711 = null;
  private JLabel ivjJLabel72 = null;
  private JLabel ivjJLabel8 = null;
  private JLabel ivjJLabel9 = null;
  private JScrollPane ivjJScrollPane1 = null;
  private JLabel ivjl_time = null;
  private DefaultListModel ivjcambios = null;
  private JLabel ivjJLabel611 = null;
  private JLabel ivjJLabel62 = null;
  private JLabel ivjJLabel7111 = null;
  private JLabel ivjJLabel712 = null;
  private JLabel ivjJLabel721 = null;
  private JLabel ivjJLabel73 = null;
  private KdbCanvas ivjkdbCanva = null;
  private JLabel ivjJLabel10 = null;
  private JLabel ivjJLabel81 = null;
  private JLabel ivjJLabel82 = null;
  private JList ivjJList1 = null;
  private JPanel ivjJPanel3 = null;
  private GridLayout ivjJPanel21GridLayout = null;
  private GridLayout ivjJPanel2GridLayout = null;
  private JPanel ivjJPanel4 = null;
  private JLabel ivjJLabel11 = null;
  private JLabel ivjJLabel111 = null;
  private JPanel ivjJPanel5 = null;
  private JLabel ivjl_totalBloques = null;
  private JLabel ivjl_totalElementos = null;
  private JButton ivjb_consult = null;
  private JButton ivjb_selectRegion = null;
  private JScrollPane ivjJS_tableResult = null;
  private JTextField ivjt_cantCambios = null;
  private JTextField ivjt_maxX = null;
  private JTextField ivjt_maxX1 = null;
  private JTextField ivjt_maxY = null;
  private JTextField ivjt_maxY1 = null;
  private JTextField ivjt_minX = null;
  private JTextField ivjt_minX1 = null;
  private JTextField ivjt_minY = null;
  private JTextField ivjt_minY1 = null;
  private JButton ivjt_seleccionRegion1 = null;
  private JComboBox ivjjc_time1 = null;
  private JComboBox ivjjc_time2 = null;
  private JRadioButton ivjjr_interval = null;
  private JRadioButton ivjjr_timeSlice = null;
  private JButton ivjb_generaChange = null;
  private JLabel ivjJLabel12 = null;
  private JTextField ivjt_umbral = null;
  private JRadioButton ivjjr_event = null;
  private JButton ivjb_consultFile = null;
  private JComboBox ivjjc_umbral = null;
  private JComboBox ivjjc_version = null;

  class IvjEventHandler
      implements java.awt.event.ActionListener {
    public void actionPerformed(java.awt.event.ActionEvent e) {
      if (e.getSource() == IndexSpatioTemporal.this.getb_create()) {
        connEtoC1();
      }
      if (e.getSource() == IndexSpatioTemporal.this.getb_setSize()) {
        connEtoC2();
      }
      if (e.getSource() == IndexSpatioTemporal.this.getb_insertManual()) {
        connEtoC3();
      }
      if (e.getSource() == IndexSpatioTemporal.this.getb_insertAuto()) {
        connEtoC4();
      }
      if (e.getSource() == IndexSpatioTemporal.this.gett_time()) {
        connEtoC6();
      }
      if (e.getSource() == IndexSpatioTemporal.this.getb_utilizacion()) {
        connEtoC7();
      }
      if (e.getSource() == IndexSpatioTemporal.this.getb_increseTime()) {
        connEtoC10();
      }
      if (e.getSource() == IndexSpatioTemporal.this.getb_selectRegion()) {
        connEtoC8();
      }
      if (e.getSource() == IndexSpatioTemporal.this.gett_seleccionRegion1()) {
        connEtoC9();
      }
      if (e.getSource() == IndexSpatioTemporal.this.getb_consult()) {
        connEtoC11();
      }
      if (e.getSource() == IndexSpatioTemporal.this.getjr_timeSlice()) {
        connEtoC12();
      }
      if (e.getSource() == IndexSpatioTemporal.this.getjr_interval()) {
        connEtoC13();
      }
      if (e.getSource() == IndexSpatioTemporal.this.getb_generaChange()) {
        connEtoC14();
      }
      if (e.getSource() == IndexSpatioTemporal.this.gett_umbral()) {
        connEtoC15();
      }
      if (e.getSource() == IndexSpatioTemporal.this.getjr_event()) {
        connEtoC16();
      }
      if (e.getSource() == IndexSpatioTemporal.this.getb_consultFile()) {
        connEtoC17();
      }
      if (e.getSource() == IndexSpatioTemporal.this.getjc_version()) {
        connEtoC18();
      }
      if (e.getSource() == IndexSpatioTemporal.this.getjc_umbral()) {
        connEtoC19();
      }
    };
  };

  /**
   * IndexSpatioTemporal constructor comment.
   */
  public IndexSpatioTemporal() {
    super();
    initialize();
  }

  /**
   * IndexSpatioTemporal constructor comment.
   * @param title java.lang.String
   */
  public IndexSpatioTemporal(String title) {
    super(title);
  }

  /**
   * Consultar la region en el tiempo n
   */
  public void b_consult_ActionEvents() {
    Stadistic.countAccessBlocks = 0; //Inicializar en Cero el contador de acceso
    int minx = Integer.parseInt(gett_minX1().getText()),
        miny = Integer.parseInt(gett_minY1().getText()),
        maxx = Integer.parseInt(gett_maxX1().getText()),
        maxy = Integer.parseInt(gett_maxY1().getText()),
        n, m;
    //crear la region a consultar
    Zone x = new Zone(new Coordinate(maxx, maxy), new Coordinate(minx, miny));
    JTable table = null;
    // 0: timeSlice
    switch (tipo_consulta) {
      case 0:
        n = Integer.parseInt(getjc_time1().getSelectedItem().toString());

        table = kdbTree.timeSlice(x, n);
        break;
      case 1: //1: interval
        n = Integer.parseInt(getjc_time1().getSelectedItem().toString());
        m = Integer.parseInt(getjc_time2().getSelectedItem().toString());
        //comparar el tiempo, el primer tiempo siempre es menor al segundo
        if (n > m) {
          table = kdbTree.interval(x, m, n);
        }
        else {
          table = kdbTree.interval(x, n, m);
        }
        break;
      case 2:
        n = Integer.parseInt(getjc_time1().getSelectedItem().toString());

        table = kdbTree.event(x, n);

        break;
    }

    getJS_tableResult().setViewportView(table);
    //Imprimir la cantidad de bloques accesados
    getl_totalElementos().setText(String.valueOf(table.getRowCount()));
    getl_totalBloques().setText(String.valueOf(Stadistic.countAccessBlocks));
    return;
  }

  /**
   * Consultar desde archivo de texto
   */
  public void b_consultFile_ActionEvents() {
    JFileChooser x = new JFileChooser();
    x.showOpenDialog(null);
    double promedio = 0;

    try {
      FileReader f = new FileReader(x.getSelectedFile());
      BufferedReader in = new BufferedReader(f);
      StringTokenizer str;
      String item;
      int x1, y1, x2, y2, t1, t2, aux = 0;
      DObject d;
      JTable table = null;

      while ( (item = in.readLine()) != null) {
        Stadistic.countAccessBlocks = 0;
        str = new StringTokenizer(item);
        x1 = (int) (Float.parseFloat(str.nextToken()) * 100000);
        y1 = (int) (Float.parseFloat(str.nextToken()) * 100000);
        x2 = (int) (Float.parseFloat(str.nextToken()) * 100000);
        y2 = (int) (Float.parseFloat(str.nextToken()) * 100000);
        t1 = (int) (Float.parseFloat(str.nextToken()) * 100);
        Zone z = new Zone(new Coordinate(x2, y2), new Coordinate(x1, y1));
        if (!str.hasMoreTokens()) {
          table = kdbTree.timeSlice(z, t1);
        }
        else {
          t2 = (int) (Float.parseFloat(str.nextToken()) * 100);
          if (t2 < 0) { //si es un negativo el ultimo token, se realiza la consulta event
            table = kdbTree.event(z, t1);
          }
          else {
            if (t1 < t2) { //si chequee el tiempo 1 y 2
              table = kdbTree.interval(z, t1, t2);
            }
            else {
              table = kdbTree.interval(z, t2, t1);
            }
          }
        }
        promedio += Stadistic.countAccessBlocks;
      }

      getl_totalBloques().setText(String.valueOf(promedio));
      getl_totalElementos().setText("...");
      promedio = promedio / 100;
      JOptionPane.showConfirmDialog(null,
                                    "El promedio de acceso es: " +
                                    String.valueOf(promedio), "Resultado",
                                    JOptionPane.YES_OPTION);

    }
    catch (IOException e) {}
  }

  /**
   * Cambiar el valor del rango la region de acuerdo al tamanio de la region introducida por el usuario
   */
  public void b_create_ActionEvents() {
    //Desactivar las opciones de consultas
    getb_generaChange().setEnabled(false);
    getb_consult().setEnabled(false);

    String largo = gett_largo().getText(),
        ancho = gett_ancho().getText();
    gett_rangoX().setText(largo);
    gett_rangoY().setText(ancho);
    //borrar todos los tiempos existentes
    getjc_time1().removeAllItems();
    getjc_time2().removeAllItems();

    getjc_time1().addItem("0");
    getjc_time2().addItem("0");
    pointCount = 0;
    timeCount = 0;
    getcambios().removeAllElements();

    kdbTree = new KDBTree(new Coordinate(Integer.parseInt(largo),
                                         Integer.parseInt(ancho)),
                          new Coordinate(0, 0));
    getkdbCanva().setKDB(kdbTree);
    getkdbCanva().repaint();
    ivjJTree1 = kdbTree.constructJTreeForKDB();
    getJTreeScrollPanel().setViewportView(ivjJTree1);
    return;
  }

  /**
   * Aumentar el contador de tiempo, la primera vez, se desactiva todas las opciones para la insercion en el arbol
   */
  public void b_increseTime_ActionEvents() {
    if (timeCount == 0) {
      getJPanel1().setEnabled(true);
      kdbTree.mountPointAtList();
    }
    timeCount++;
    getl_time().setText(String.valueOf(timeCount));
    getjc_time1().addItem(String.valueOf(timeCount));
    getjc_time2().addItem(String.valueOf(timeCount));
    //Se desactiva tambien las opciones de consulta
    getb_generaChange().setEnabled(true);
    getb_consult().setEnabled(true);

    ivjJTree1 = kdbTree.constructJTreeForKDB();
    getJTreeScrollPanel().setViewportView(ivjJTree1);
    return;
  }

  /**
   * Insersion Automatica. El usuario introduce la cantidad del punto que desea ingresar,
   * junto con el valor del rango x,y actualizado.
   */
  public void b_insertAuto_ActionEvents() {

    int cant = Integer.parseInt(gett_insertpoint().getText());
    int rank_x = Integer.parseInt(gett_rangoX().getText()),
        rank_y = Integer.parseInt(gett_rangoY().getText());
    Page.SIZEPOINT = Integer.parseInt(gett_sizePoint().getText());
    Page.SIZEREGION = Integer.parseInt(gett_sizeRegion().getText());
    for (int i = 0; i < cant; i++) {

      while (!kdbTree.insert(
          new DObject(
          pointCount++,
          (int) (Math.random() * rank_x),
          (int) (Math.random() * rank_y)
          ))) {
        ;
      }
    }
    getkdbCanva().repaint();

    //Dibujar el arbol
    ivjJTree1 = kdbTree.constructJTreeForKDB();
    getJTreeScrollPanel().setViewportView(ivjJTree1);
    return;
  }

  /**
   * Insercion desde un archivo X
   */
  public void b_insertManual_ActionEvents() {
    Page.SIZEPOINT = Integer.parseInt(gett_sizePoint().getText());
    Page.SIZEREGION = Integer.parseInt(gett_sizeRegion().getText());
    JFileChooser x = new JFileChooser();
    x.showOpenDialog(null);
    gett_ancho().setText("100000");
    gett_largo().setText("100000");
    Zone z = new Zone(new Coordinate(100000, 100000), new Coordinate(0, 0));
    this.b_create_ActionEvents();
    getcambios().removeAllElements();
    //Hashtable hs = new Hashtable();
    try {
      FileReader f1 = new FileReader(x.getSelectedFile());
      BufferedReader in = new BufferedReader(f1);
      StringTokenizer str;
      String item;
      int oid, t, x1, y1, x2, y2, aux = 0;
      DObject d = null, e = null, f = null;
      boolean flag = false;
      Vector v = null;
      Hashtable todos = new Hashtable();

      //obtener los cambios
      while ( (item = in.readLine()) != null) {
        str = new StringTokenizer(item);
        oid = (int) (Float.parseFloat(str.nextToken()));
        t = (int) (Float.parseFloat(str.nextToken()) * 100);
        x1 = (int) (Float.parseFloat(str.nextToken()) * 100000);
        y1 = (int) (Float.parseFloat(str.nextToken()) * 100000);

        //Cuando comienza el cambio, se monta el bloque del tiempo cero en
        // la lista de cambios
        if (aux + 1 != oid && !flag) {
          JOptionPane.showConfirmDialog(null, "Ahora va a empezar los cambios",
                                        "cambios", JOptionPane.OK_OPTION);
          kdbTree.mountPointAtList();
          v = kdbTree.getlastRefresh(z, 500);
          for (int i = 0; i < v.size(); i++) {
                               d = (DObject) v.elementAt(i);
                               todos.put(String.valueOf(d.getID()),d);
                           }

        }

        if (aux + 1 == oid) {
          d = new DObject(oid, x1, y1, t, 'i');
          kdbTree.insert(d);
          getcambios().addElement(
              "T"
              + String.valueOf(t)
              + " -> inserto d"
              + String.valueOf(oid)
              + " ("
              + String.valueOf(x1)
              + ","
              + String.valueOf(y1)
              + ")");

          pointCount++; //sumador de cantidad de puntos
          aux++;

        }
        else {
          flag = true;
          d = (DObject)todos.get(String.valueOf(oid));
          //insertar el cambio en la posicion original
          d = new DObject(oid * -1, d.getX(), d.getY(), t, '3');
          kdbTree.insert(t, d);
          getcambios().addElement(
              "T"
              + String.valueOf(t)
              + " -> Movio D"
              + String.valueOf(oid)
              + " de ("
              + String.valueOf(d.getX())
              + ","
              + String.valueOf(d.getY())
              + ") a ( "
              + String.valueOf(x1)
              + ", "
              + String.valueOf(y1)
              + ")");

          e = new DObject(oid, x1, y1, t, 'i');
          f = new DObject(oid, x1, y1, t, 'i');
          //v.setElementAt(e, i);
          todos.remove(String.valueOf(oid));
           todos.put(String.valueOf(oid),e);
          kdbTree.insert(t, f); //insertar el cambio en la nueva posisicon
        }

      }
      //Actualizar el tiempo
      this.timeCount = 100;
      getl_time().setText(String.valueOf(timeCount));
      //Actualizar el cambo box que contenga los tiempos
      getjc_time1().removeAllItems();
      getjc_time2().removeAllItems();

      getb_consult().setEnabled(true);
      for (int i = 0; i <= 100; i++) {
        getjc_time1().addItem(String.valueOf(i));
        getjc_time2().addItem(String.valueOf(i));
      }
      getkdbCanva().repaint();
      ivjJTree1 = kdbTree.constructJTreeForKDB();
      getJTreeScrollPanel().setViewportView(ivjJTree1);

    }
    catch (IOException e) {
      JOptionPane.showMessageDialog(null, "Falla indeterminada...");
    }
    /*
      boolean sucess;
       getkdbCanva().setEnableEvent();
       sucess =
           kdbTree.insert(
               new DObject(
                   pointCount++,
                   Integer.parseInt(getl_x().getText()),
                   Integer.parseInt(getl_y().getText()),
                   0,
                   'i'
                   ));
       if (sucess){
        JOptionPane.showMessageDialog(null,"Inserto exitosamente en el arbol");
        getkdbCanva().repaint();
        ivjJTree1 = kdbTree.constructJTreeForKDB();
     getJTreeScrollPanel().setViewportView(ivjJTree1);
       }else
        JOptionPane.showMessageDialog(null,"Fallo el arbol");

       return;*/
  }

  /**
   * Seleccionar la desde el arbol de KDB para generar cambios
   */
  public void b_selectRegion_ActionEvents() {
    seleccionregion = 0;
    seleccionarRegion();
    return;
  }

  /**
   * Comment
   */
  public void b_setSize_ActionEvents() {
    Page.SIZEPOINT = Integer.parseInt(gett_sizePoint().getText());
    Page.SIZEREGION = Integer.parseInt(gett_sizeRegion().getText());
  }

  /**
   * Mostrar la estadistica de la utilizacion del bloque
   */
  public void b_utilizacion_ActionEvents() {
    //getJPanel2().add("West",kdbTree.getPanelUtilizationAndStadistic());
    //getJPanel2().repaint();
    JOptionPane.showMessageDialog(null, kdbTree.getPanelUtilizationAndStadistic());
    return;
  }

  /**
   * connEtoC1:  (b_create.action. --> IndexSpatioTemporal.b_create_ActionEvents()V)
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private void connEtoC1() {
    try {
      // user code begin {1}
      // user code end
      this.b_create_ActionEvents();
      // user code begin {2}
      // user code end
    }
    catch (java.lang.Throwable ivjExc) {
      // user code begin {3}
      // user code end
      handleException(ivjExc);
    }
  }

  /**
   * connEtoC10:  (b_increseTime.action. --> IndexSpatioTemporal.b_increseTime_ActionEvents()V)
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private void connEtoC10() {
    try {
      // user code begin {1}
      // user code end
      this.b_increseTime_ActionEvents();
      // user code begin {2}
      // user code end
    }
    catch (java.lang.Throwable ivjExc) {
      // user code begin {3}
      // user code end
      handleException(ivjExc);
    }
  }

  /**
   * connEtoC11:  (b_consult.action. --> IndexSpatioTemporal.b_consult_ActionEvents()V)
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private void connEtoC11() {
    try {
      // user code begin {1}
      // user code end
      this.b_consult_ActionEvents();
      // user code begin {2}
      // user code end
    }
    catch (java.lang.Throwable ivjExc) {
      // user code begin {3}
      // user code end
      handleException(ivjExc);
    }
  }

  /**
   * connEtoC12:  (jr_timeSlice.action. --> IndexSpatioTemporal.jr_timeSlice_ActionEvents1()V)
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private void connEtoC12() {
    try {
      // user code begin {1}
      // user code end
      this.jr_timeSlice_ActionEvents();
      // user code begin {2}
      // user code end
    }
    catch (java.lang.Throwable ivjExc) {
      // user code begin {3}
      // user code end
      handleException(ivjExc);
    }
  }

  /**
   * connEtoC13:  (jr_interval.action. --> IndexSpatioTemporal.jr_interval_ActionEvents1()V)
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private void connEtoC13() {
    try {
      // user code begin {1}
      // user code end
      this.jr_interval_ActionEvents();
      // user code begin {2}
      // user code end
    }
    catch (java.lang.Throwable ivjExc) {
      // user code begin {3}
      // user code end
      handleException(ivjExc);
    }
  }

  /**
   * connEtoC14:  (t_generaChange.action. --> IndexSpatioTemporal.t_generaChange_ActionEvents()V)
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private void connEtoC14() {
    try {
      // user code begin {1}
      // user code end
      this.t_generaChange_ActionEvents();
      // user code begin {2}
      // user code end
    }
    catch (java.lang.Throwable ivjExc) {
      // user code begin {3}
      // user code end
      handleException(ivjExc);
    }
  }

  /**
   * connEtoC15:  (t_umbral.action. --> IndexSpatioTemporal.t_umbral_ActionEvents()V)
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private void connEtoC15() {
    try {
      // user code begin {1}
      // user code end
      this.t_umbral_ActionEvents();
      // user code begin {2}
      // user code end
    }
    catch (java.lang.Throwable ivjExc) {
      // user code begin {3}
      // user code end
      handleException(ivjExc);
    }
  }

  /**
   * connEtoC16:  (jr_event.action. --> IndexSpatioTemporal.jr_event_ActionEvents()V)
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private void connEtoC16() {
    try {
      // user code begin {1}
      // user code end
      this.jr_event_ActionEvents();
      // user code begin {2}
      // user code end
    }
    catch (java.lang.Throwable ivjExc) {
      // user code begin {3}
      // user code end
      handleException(ivjExc);
    }
  }

  /**
   * connEtoC17:  (b_consultFile.action. --> IndexSpatioTemporal.b_consultFile_ActionEvents()V)
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private void connEtoC17() {
    try {
      // user code begin {1}
      // user code end
      this.b_consultFile_ActionEvents();
      // user code begin {2}
      // user code end
    }
    catch (java.lang.Throwable ivjExc) {
      // user code begin {3}
      // user code end
      handleException(ivjExc);
    }
  }

  /**
   * connEtoC18:  (jc_version.action. --> IndexSpatioTemporal.jc_version_ActionEvents()V)
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private void connEtoC18() {
    try {
      // user code begin {1}
      // user code end
      this.jc_version_ActionEvents();
      // user code begin {2}
      // user code end
    }
    catch (java.lang.Throwable ivjExc) {
      // user code begin {3}
      // user code end
      handleException(ivjExc);
    }
  }

  /**
   * connEtoC19:  (jc_umbral.action. --> IndexSpatioTemporal.jc_umbral_ActionEvents()V)
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private void connEtoC19() {
    try {
      // user code begin {1}
      // user code end
      this.jc_umbral_ActionEvents();
      // user code begin {2}
      // user code end
    }
    catch (java.lang.Throwable ivjExc) {
      // user code begin {3}
      // user code end
      handleException(ivjExc);
    }
  }

  /**
   * connEtoC2:  (b_setSize.action. --> IndexSpatioTemporal.b_setSize_ActionEvents()V)
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private void connEtoC2() {
    try {
      // user code begin {1}
      // user code end
      this.b_setSize_ActionEvents();
      // user code begin {2}
      // user code end
    }
    catch (java.lang.Throwable ivjExc) {
      // user code begin {3}
      // user code end
      handleException(ivjExc);
    }
  }

  /**
   * connEtoC3:  (b_insertManual.action. --> IndexSpatioTemporal.b_insertManual_ActionEvents()V)
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private void connEtoC3() {
    try {
      // user code begin {1}
      // user code end
      this.b_insertManual_ActionEvents();
      // user code begin {2}
      // user code end
    }
    catch (java.lang.Throwable ivjExc) {
      // user code begin {3}
      // user code end
      handleException(ivjExc);
    }
  }

  /**
   * connEtoC4:  (b_insertAuto.action. --> IndexSpatioTemporal.b_insertAuto_ActionEvents()V)
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private void connEtoC4() {
    try {
      // user code begin {1}
      // user code end
      this.b_insertAuto_ActionEvents();
      // user code begin {2}
      // user code end
    }
    catch (java.lang.Throwable ivjExc) {
      // user code begin {3}
      // user code end
      handleException(ivjExc);
    }
  }

  /**
   * connEtoC5:  (IndexSpatioTemporal.initialize() --> IndexSpatioTemporal.indexSpatioTemporal_Initialize()V)
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private void connEtoC5() {
    try {
      // user code begin {1}
      // user code end
      this.indexSpatioTemporal_Initialize();
      // user code begin {2}
      // user code end
    }
    catch (java.lang.Throwable ivjExc) {
      // user code begin {3}
      // user code end
      handleException(ivjExc);
    }
  }

  /**
   * connEtoC6:  (t_time.action. --> IndexSpatioTemporal.t_time_ActionEvents()V)
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private void connEtoC6() {
    try {
      // user code begin {1}
      // user code end
      this.t_time_ActionEvents();
      // user code begin {2}
      // user code end
    }
    catch (java.lang.Throwable ivjExc) {
      // user code begin {3}
      // user code end
      handleException(ivjExc);
    }
  }

  /**
   * connEtoC7:  (b_utilizacion.action. --> IndexSpatioTemporal.b_utilizacion_ActionEvents()V)
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private void connEtoC7() {
    try {
      // user code begin {1}
      // user code end
      this.b_utilizacion_ActionEvents();
      // user code begin {2}
      // user code end
    }
    catch (java.lang.Throwable ivjExc) {
      // user code begin {3}
      // user code end
      handleException(ivjExc);
    }
  }

  /**
   * connEtoC8:  (b_selectRegion.action. --> IndexSpatioTemporal.b_selectRegion_ActionEvents()V)
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private void connEtoC8() {
    try {
      // user code begin {1}
      // user code end
      this.b_selectRegion_ActionEvents();
      // user code begin {2}
      // user code end
    }
    catch (java.lang.Throwable ivjExc) {
      // user code begin {3}
      // user code end
      handleException(ivjExc);
    }
  }

  /**
   * connEtoC9:  (t_seleccionRegion1.action. --> IndexSpatioTemporal.t_seleccionRegion1_ActionEvents()V)
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private void connEtoC9() {
    try {
      // user code begin {1}
      // user code end
      this.t_seleccionRegion1_ActionEvents();
      // user code begin {2}
      // user code end
    }
    catch (java.lang.Throwable ivjExc) {
      // user code begin {3}
      // user code end
      handleException(ivjExc);
    }
  }

  /**
   * connPtoP1SetTarget:  (cambios.this <--> JList1.model)
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private void connPtoP1SetTarget() {
    /* Set the target from the source */
    try {
      getJList1().setModel(getcambios());
      // user code begin {1}
      // user code end
    }
    catch (java.lang.Throwable ivjExc) {
      // user code begin {3}
      // user code end
      handleException(ivjExc);
    }
  }

  /**
   * Return the JButton3 property value.
   * @return javax.swing.JButton
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JButton getb_consult() {
    if (ivjb_consult == null) {
      try {
        ivjb_consult = new javax.swing.JButton();
        ivjb_consult.setName("b_consult");
        ivjb_consult.setText("Consultar");
        ivjb_consult.setBounds(13, 169, 90, 27);
        ivjb_consult.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjb_consult;
  }

  /**
   * Return the b_consultFile property value.
   * @return javax.swing.JButton
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JButton getb_consultFile() {
    if (ivjb_consultFile == null) {
      try {
        ivjb_consultFile = new javax.swing.JButton();
        ivjb_consultFile.setName("b_consultFile");
        ivjb_consultFile.setToolTipText("Consultar desde un archivo X");
        ivjb_consultFile.setText("Consultar Desde");
        ivjb_consultFile.setBounds(114, 169, 131, 27);
        ivjb_consultFile.setCursor(new java.awt.Cursor(java.awt.Cursor.
            HAND_CURSOR));
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjb_consultFile;
  }

  /**
   * Return the JButton1 property value.
   * @return javax.swing.JButton
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JButton getb_create() {
    if (ivjb_create == null) {
      try {
        ivjb_create = new javax.swing.JButton();
        ivjb_create.setName("b_create");
        ivjb_create.setMnemonic('c');
        ivjb_create.setText("Crear");
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjb_create;
  }

  /**
   * Return the JButton2 property value.
   * @return javax.swing.JButton
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JButton getb_generaChange() {
    if (ivjb_generaChange == null) {
      try {
        ivjb_generaChange = new javax.swing.JButton();
        ivjb_generaChange.setName("b_generaChange");
        ivjb_generaChange.setText("Generar");
        ivjb_generaChange.setHorizontalTextPosition(javax.swing.SwingConstants.
            CENTER);
        ivjb_generaChange.setContentAreaFilled(true);
        ivjb_generaChange.setBounds(19, 149, 85, 30);
        ivjb_generaChange.setHorizontalAlignment(javax.swing.SwingConstants.
                                                 CENTER);
        ivjb_generaChange.setCursor(new java.awt.Cursor(java.awt.Cursor.
            HAND_CURSOR));
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjb_generaChange;
  }

  /**
   * Return the b_increseTime property value.
   * @return javax.swing.JButton
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JButton getb_increseTime() {
    if (ivjb_increseTime == null) {
      try {
        ivjb_increseTime = new javax.swing.JButton();
        ivjb_increseTime.setName("b_increseTime");
        ivjb_increseTime.setText("Aumenta Tiempo");
        ivjb_increseTime.setBounds(106, 149, 148, 30);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjb_increseTime;
  }

  /**
   * Return the b_insertAuto property value.
   * @return javax.swing.JButton
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JButton getb_insertAuto() {
    if (ivjb_insertAuto == null) {
      try {
        ivjb_insertAuto = new javax.swing.JButton();
        ivjb_insertAuto.setName("b_insertAuto");
        ivjb_insertAuto.setMnemonic('s');
        ivjb_insertAuto.setText("Insertar Automatico");
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjb_insertAuto;
  }

  /**
   * Return the b_insertManual property value.
   * @return javax.swing.JButton
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JButton getb_insertManual() {
    if (ivjb_insertManual == null) {
      try {
        ivjb_insertManual = new javax.swing.JButton();
        ivjb_insertManual.setName("b_insertManual");
        ivjb_insertManual.setToolTipText(
            "Insertar y cambiar los datos desde un archivo X");
        ivjb_insertManual.setMnemonic('i');
        ivjb_insertManual.setText("Insertar Desde ...");
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjb_insertManual;
  }

  /**
   * Return the JButton1 property value.
   * @return javax.swing.JButton
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JButton getb_selectRegion() {
    if (ivjb_selectRegion == null) {
      try {
        ivjb_selectRegion = new javax.swing.JButton();
        ivjb_selectRegion.setName("b_selectRegion");
        ivjb_selectRegion.setText("Selecciona La Region:");
        ivjb_selectRegion.setBounds(19, 14, 165, 27);
        ivjb_selectRegion.setCursor(new java.awt.Cursor(java.awt.Cursor.
            HAND_CURSOR));
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjb_selectRegion;
  }

  /**
   * Return the b_setSize property value.
   * @return javax.swing.JButton
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JButton getb_setSize() {
    if (ivjb_setSize == null) {
      try {
        ivjb_setSize = new javax.swing.JButton();
        ivjb_setSize.setName("b_setSize");
        ivjb_setSize.setMnemonic('a');
        ivjb_setSize.setText("Actualizar");
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjb_setSize;
  }

  /**
   * Return the b_utilizacion property value.
   * @return javax.swing.JButton
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JButton getb_utilizacion() {
    if (ivjb_utilizacion == null) {
      try {
        ivjb_utilizacion = new javax.swing.JButton();
        ivjb_utilizacion.setName("b_utilizacion");
        ivjb_utilizacion.setMnemonic('u');
        ivjb_utilizacion.setText("Utilizacion");
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjb_utilizacion;
  }

  /**
   * Return the cambios property value.
   * @return javax.swing.DefaultListModel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.DefaultListModel getcambios() {
    if (ivjcambios == null) {
      try {
        ivjcambios = new javax.swing.DefaultListModel();
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjcambios;
  }

  /**
   * Return the JComboBox1 property value.
   * @return javax.swing.JComboBox
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JComboBox getjc_time1() {
    if (ivjjc_time1 == null) {
      try {
        ivjjc_time1 = new javax.swing.JComboBox();
        ivjjc_time1.setName("jc_time1");
        ivjjc_time1.setBounds(75, 125, 69, 16);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjjc_time1;
  }

  /**
   * Return the JComboBox11 property value.
   * @return javax.swing.JComboBox
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JComboBox getjc_time2() {
    if (ivjjc_time2 == null) {
      try {
        ivjjc_time2 = new javax.swing.JComboBox();
        ivjjc_time2.setName("jc_time2");
        ivjjc_time2.setBounds(75, 146, 69, 16);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjjc_time2;
  }

  /**
   * Return the jc_umbral property value.
   * @return javax.swing.JComboBox
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JComboBox getjc_umbral() {
    if (ivjjc_umbral == null) {
      try {
        ivjjc_umbral = new javax.swing.JComboBox();
        ivjjc_umbral.setName("jc_umbral");
        ivjjc_umbral.setBounds(84, 94, 79, 23);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjjc_umbral;
  }

  /**
   * Return the jc_version property value.
   * @return javax.swing.JComboBox
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JComboBox getjc_version() {
    if (ivjjc_version == null) {
      try {
        ivjjc_version = new javax.swing.JComboBox();
        ivjjc_version.setName("jc_version");
        ivjjc_version.setToolTipText("Seleccione la version que desea chequear");
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjjc_version;
  }

  /**
   * Return the JFrameContentPane property value.
   * @return javax.swing.JPanel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JPanel getJFrameContentPane() {
    if (ivjJFrameContentPane == null) {
      try {
        ivjJFrameContentPane = new javax.swing.JPanel();
        ivjJFrameContentPane.setName("JFrameContentPane");
        ivjJFrameContentPane.setLayout(new java.awt.BorderLayout());
        getJFrameContentPane().add(getPanelSouth(), "South");
        getJFrameContentPane().add(getPanelNorth(), "North");
        getJFrameContentPane().add(getpTablePanel(), "Center");
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjJFrameContentPane;
  }

  /**
   * Return the JLabel1 property value.
   * @return javax.swing.JLabel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JLabel getJLabel1() {
    if (ivjJLabel1 == null) {
      try {
        ivjJLabel1 = new javax.swing.JLabel();
        ivjJLabel1.setName("JLabel1");
        ivjJLabel1.setText("Largo:");
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjJLabel1;
  }

  /**
   * Return the JLabel10 property value.
   * @return javax.swing.JLabel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JLabel getJLabel10() {
    if (ivjJLabel10 == null) {
      try {
        ivjJLabel10 = new javax.swing.JLabel();
        ivjJLabel10.setName("JLabel10");
        ivjJLabel10.setText("Tipo:");
        ivjJLabel10.setBounds(6, 103, 30, 16);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjJLabel10;
  }

  /**
   * Return the JLabel11 property value.
   * @return javax.swing.JLabel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JLabel getJLabel11() {
    if (ivjJLabel11 == null) {
      try {
        ivjJLabel11 = new javax.swing.JLabel();
        ivjJLabel11.setName("JLabel11");
        ivjJLabel11.setText("Total Bloques Accesados:");
        ivjJLabel11.setBounds(44, 201, 148, 16);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjJLabel11;
  }

  /**
   * Return the JLabel111 property value.
   * @return javax.swing.JLabel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JLabel getJLabel111() {
    if (ivjJLabel111 == null) {
      try {
        ivjJLabel111 = new javax.swing.JLabel();
        ivjJLabel111.setName("JLabel111");
        ivjJLabel111.setText("Total Elementos:");
        ivjJLabel111.setBounds(93, 219, 99, 16);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjJLabel111;
  }

  /**
   * Return the JLabel12 property value.
   * @return javax.swing.JLabel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JLabel getJLabel12() {
    if (ivjJLabel12 == null) {
      try {
        ivjJLabel12 = new javax.swing.JLabel();
        ivjJLabel12.setName("JLabel12");
        ivjJLabel12.setText("Umbral:");
        ivjJLabel12.setBounds(19, 99, 55, 16);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjJLabel12;
  }

  /**
   * Return the JLabel2 property value.
   * @return javax.swing.JLabel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JLabel getJLabel2() {
    if (ivjJLabel2 == null) {
      try {
        ivjJLabel2 = new javax.swing.JLabel();
        ivjJLabel2.setName("JLabel2");
        ivjJLabel2.setText("Ancho:");
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjJLabel2;
  }

  /**
   * Return the JLabel3 property value.
   * @return javax.swing.JLabel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JLabel getJLabel3() {
    if (ivjJLabel3 == null) {
      try {
        ivjJLabel3 = new javax.swing.JLabel();
        ivjJLabel3.setName("JLabel3");
        ivjJLabel3.setText("Regiones:");
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjJLabel3;
  }

  /**
   * Return the JLabel4 property value.
   * @return javax.swing.JLabel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JLabel getJLabel4() {
    if (ivjJLabel4 == null) {
      try {
        ivjJLabel4 = new javax.swing.JLabel();
        ivjJLabel4.setName("JLabel4");
        ivjJLabel4.setText("Puntos:");
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjJLabel4;
  }

  /**
   * Return the JLabel5 property value.
   * @return javax.swing.JLabel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JLabel getJLabel5() {
    if (ivjJLabel5 == null) {
      try {
        ivjJLabel5 = new javax.swing.JLabel();
        ivjJLabel5.setName("JLabel5");
        ivjJLabel5.setText("Intervalo:");
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjJLabel5;
  }

  /**
   * Return the JLabel6 property value.
   * @return javax.swing.JLabel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JLabel getJLabel6() {
    if (ivjJLabel6 == null) {
      try {
        ivjJLabel6 = new javax.swing.JLabel();
        ivjJLabel6.setName("JLabel6");
        ivjJLabel6.setText("MIN");
        ivjJLabel6.setBounds(19, 50, 25, 16);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjJLabel6;
  }

  /**
   * Return the JLabel61 property value.
   * @return javax.swing.JLabel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JLabel getJLabel61() {
    if (ivjJLabel61 == null) {
      try {
        ivjJLabel61 = new javax.swing.JLabel();
        ivjJLabel61.setName("JLabel61");
        ivjJLabel61.setText("MAX");
        ivjJLabel61.setBounds(115, 52, 31, 16);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjJLabel61;
  }

  /**
   * Return the JLabel611 property value.
   * @return javax.swing.JLabel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JLabel getJLabel611() {
    if (ivjJLabel611 == null) {
      try {
        ivjJLabel611 = new javax.swing.JLabel();
        ivjJLabel611.setName("JLabel611");
        ivjJLabel611.setText("MAX");
        ivjJLabel611.setBounds(101, 58, 31, 16);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjJLabel611;
  }

  /**
   * Return the JLabel62 property value.
   * @return javax.swing.JLabel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JLabel getJLabel62() {
    if (ivjJLabel62 == null) {
      try {
        ivjJLabel62 = new javax.swing.JLabel();
        ivjJLabel62.setName("JLabel62");
        ivjJLabel62.setText("MIN");
        ivjJLabel62.setBounds(5, 56, 25, 16);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjJLabel62;
  }

  /**
   * Return the JLabel7 property value.
   * @return javax.swing.JLabel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JLabel getJLabel7() {
    if (ivjJLabel7 == null) {
      try {
        ivjJLabel7 = new javax.swing.JLabel();
        ivjJLabel7.setName("JLabel7");
        ivjJLabel7.setText("X:");
        ivjJLabel7.setBounds(44, 51, 15, 16);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjJLabel7;
  }

  /**
   * Return the JLabel71 property value.
   * @return javax.swing.JLabel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JLabel getJLabel71() {
    if (ivjJLabel71 == null) {
      try {
        ivjJLabel71 = new javax.swing.JLabel();
        ivjJLabel71.setName("JLabel71");
        ivjJLabel71.setText("Y:");
        ivjJLabel71.setBounds(44, 74, 19, 16);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjJLabel71;
  }

  /**
   * Return the JLabel711 property value.
   * @return javax.swing.JLabel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JLabel getJLabel711() {
    if (ivjJLabel711 == null) {
      try {
        ivjJLabel711 = new javax.swing.JLabel();
        ivjJLabel711.setName("JLabel711");
        ivjJLabel711.setText("Y:");
        ivjJLabel711.setBounds(148, 73, 19, 16);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjJLabel711;
  }

  /**
   * Return the JLabel7111 property value.
   * @return javax.swing.JLabel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JLabel getJLabel7111() {
    if (ivjJLabel7111 == null) {
      try {
        ivjJLabel7111 = new javax.swing.JLabel();
        ivjJLabel7111.setName("JLabel7111");
        ivjJLabel7111.setText("Y:");
        ivjJLabel7111.setBounds(134, 79, 19, 16);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjJLabel7111;
  }

  /**
   * Return the JLabel712 property value.
   * @return javax.swing.JLabel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JLabel getJLabel712() {
    if (ivjJLabel712 == null) {
      try {
        ivjJLabel712 = new javax.swing.JLabel();
        ivjJLabel712.setName("JLabel712");
        ivjJLabel712.setText("Y:");
        ivjJLabel712.setBounds(30, 80, 19, 16);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjJLabel712;
  }

  /**
   * Return the JLabel72 property value.
   * @return javax.swing.JLabel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JLabel getJLabel72() {
    if (ivjJLabel72 == null) {
      try {
        ivjJLabel72 = new javax.swing.JLabel();
        ivjJLabel72.setName("JLabel72");
        ivjJLabel72.setText("X:");
        ivjJLabel72.setBounds(148, 50, 19, 16);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjJLabel72;
  }

  /**
   * Return the JLabel721 property value.
   * @return javax.swing.JLabel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JLabel getJLabel721() {
    if (ivjJLabel721 == null) {
      try {
        ivjJLabel721 = new javax.swing.JLabel();
        ivjJLabel721.setName("JLabel721");
        ivjJLabel721.setText("X:");
        ivjJLabel721.setBounds(134, 56, 19, 16);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjJLabel721;
  }

  /**
   * Return the JLabel73 property value.
   * @return javax.swing.JLabel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JLabel getJLabel73() {
    if (ivjJLabel73 == null) {
      try {
        ivjJLabel73 = new javax.swing.JLabel();
        ivjJLabel73.setName("JLabel73");
        ivjJLabel73.setText("X:");
        ivjJLabel73.setBounds(30, 57, 15, 16);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjJLabel73;
  }

  /**
   * Return the JLabel8 property value.
   * @return javax.swing.JLabel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JLabel getJLabel8() {
    if (ivjJLabel8 == null) {
      try {
        ivjJLabel8 = new javax.swing.JLabel();
        ivjJLabel8.setName("JLabel8");
        ivjJLabel8.setText("Tiempo 1: ");
        ivjJLabel8.setBounds(5, 125, 61, 16);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjJLabel8;
  }

  /**
   * Return the JLabel81 property value.
   * @return javax.swing.JLabel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JLabel getJLabel81() {
    if (ivjJLabel81 == null) {
      try {
        ivjJLabel81 = new javax.swing.JLabel();
        ivjJLabel81.setName("JLabel81");
        ivjJLabel81.setText("Tiempo 2: ");
        ivjJLabel81.setBounds(6, 147, 61, 16);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjJLabel81;
  }

  /**
   * Return the JLabel82 property value.
   * @return javax.swing.JLabel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JLabel getJLabel82() {
    if (ivjJLabel82 == null) {
      try {
        ivjJLabel82 = new javax.swing.JLabel();
        ivjJLabel82.setName("JLabel82");
        ivjJLabel82.setText("T ");
        ivjJLabel82.setBounds(187, 18, 11, 16);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjJLabel82;
  }

  /**
   * Return the JLabel9 property value.
   * @return javax.swing.JLabel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JLabel getJLabel9() {
    if (ivjJLabel9 == null) {
      try {
        ivjJLabel9 = new javax.swing.JLabel();
        ivjJLabel9.setName("JLabel9");
        ivjJLabel9.setText("Cantidad de Cambios:");
        ivjJLabel9.setBounds(20, 123, 129, 16);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjJLabel9;
  }

  /**
   * Return the JList1 property value.
   * @return javax.swing.JList
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JList getJList1() {
    if (ivjJList1 == null) {
      try {
        ivjJList1 = new javax.swing.JList();
        ivjJList1.setName("JList1");
        ivjJList1.setBounds(0, 0, 173, 186);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjJList1;
  }

  /**
   * Return the JP_treeAndOperation property value.
   * @return javax.swing.JPanel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JPanel getJP_treeAndOperation() {
    if (ivjJP_treeAndOperation == null) {
      try {
        ivjJP_treeAndOperation = new javax.swing.JPanel();
        ivjJP_treeAndOperation.setName("JP_treeAndOperation");
        ivjJP_treeAndOperation.setLayout(new java.awt.GridBagLayout());

        java.awt.GridBagConstraints constraintsJTreeScrollPanel = new java.awt.
            GridBagConstraints();
        constraintsJTreeScrollPanel.gridx = 0;
        constraintsJTreeScrollPanel.gridy = 0;
        constraintsJTreeScrollPanel.fill = java.awt.GridBagConstraints.BOTH;
        constraintsJTreeScrollPanel.weightx = 1.0;
        constraintsJTreeScrollPanel.weighty = 1.0;
        constraintsJTreeScrollPanel.insets = new java.awt.Insets(4, 4, 4, 4);
        getJP_treeAndOperation().add(getJTreeScrollPanel(),
                                     constraintsJTreeScrollPanel);

        java.awt.GridBagConstraints constraintsJPanel1 = new java.awt.
            GridBagConstraints();
        constraintsJPanel1.gridx = 1;
        constraintsJPanel1.gridy = 0;
        constraintsJPanel1.fill = java.awt.GridBagConstraints.BOTH;
        constraintsJPanel1.weightx = 1.0;
        constraintsJPanel1.weighty = 1.0;
        constraintsJPanel1.ipadx = 300;
        constraintsJPanel1.insets = new java.awt.Insets(4, 4, 4, 4);
        getJP_treeAndOperation().add(getJPanel1(), constraintsJPanel1);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjJP_treeAndOperation;
  }

  /**
   * Return the JPanel1 property value.
   * @return javax.swing.JPanel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JPanel getJPanel1() {
    if (ivjJPanel1 == null) {
      try {
        ivjJPanel1 = new javax.swing.JPanel();
        ivjJPanel1.setName("JPanel1");
        ivjJPanel1.setLayout(getJPanel1GridLayout());
        ivjJPanel1.setEnabled(false);
        getJPanel1().add(getJPanel2(), getJPanel2().getName());
        getJPanel1().add(getJPanel21(), getJPanel21().getName());
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjJPanel1;
  }

  /**
   * Return the JPanel1GridLayout property value.
   * @return java.awt.GridLayout
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private java.awt.GridLayout getJPanel1GridLayout() {
    java.awt.GridLayout ivjJPanel1GridLayout = null;
    try {
      /* Create part */
      ivjJPanel1GridLayout = new java.awt.GridLayout(2, 1);
    }
    catch (java.lang.Throwable ivjExc) {
      handleException(ivjExc);
    }
    ;
    return ivjJPanel1GridLayout;
  }

  /**
   * Return the JPanel2 property value.
   * @return javax.swing.JPanel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JPanel getJPanel2() {
    if (ivjJPanel2 == null) {
      try {
        ivjJPanel2 = new javax.swing.JPanel();
        ivjJPanel2.setName("JPanel2");
        ivjJPanel2.setBorder(BorderFactory.createTitledBorder("Generar Cambios"));
        ivjJPanel2.setLayout(getJPanel2GridLayout());
        getJPanel2().add(getJPanel3(), getJPanel3().getName());
        getJPanel2().add(getJScrollPane1(), getJScrollPane1().getName());
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjJPanel2;
  }

  /**
   * Return the JPanel21 property value.
   * @return javax.swing.JPanel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JPanel getJPanel21() {
    if (ivjJPanel21 == null) {
      try {
        ivjJPanel21 = new javax.swing.JPanel();
        ivjJPanel21.setName("JPanel21");
        ivjJPanel21.setBorder(BorderFactory.createTitledBorder("Consultas"));
        ivjJPanel21.setLayout(getJPanel21GridLayout());
        getJPanel21().add(getJPanel4(), getJPanel4().getName());
        getJPanel21().add(getJPanel5(), getJPanel5().getName());
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjJPanel21;
  }

  /**
   * Return the JPanel21GridLayout property value.
   * @return java.awt.GridLayout
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private java.awt.GridLayout getJPanel21GridLayout() {
    java.awt.GridLayout ivjJPanel21GridLayout = null;
    try {
      /* Create part */
      ivjJPanel21GridLayout = new java.awt.GridLayout();
      ivjJPanel21GridLayout.setColumns(2);
    }
    catch (java.lang.Throwable ivjExc) {
      handleException(ivjExc);
    }
    ;
    return ivjJPanel21GridLayout;
  }

  /**
   * Return the JPanel2GridLayout property value.
   * @return java.awt.GridLayout
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private java.awt.GridLayout getJPanel2GridLayout() {
    java.awt.GridLayout ivjJPanel2GridLayout = null;
    try {
      /* Create part */
      ivjJPanel2GridLayout = new java.awt.GridLayout();
      ivjJPanel2GridLayout.setColumns(2);
    }
    catch (java.lang.Throwable ivjExc) {
      handleException(ivjExc);
    }
    ;
    return ivjJPanel2GridLayout;
  }

  /**
   * Return the JPanel3 property value.
   * @return javax.swing.JPanel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JPanel getJPanel3() {
    if (ivjJPanel3 == null) {
      try {
        ivjJPanel3 = new javax.swing.JPanel();
        ivjJPanel3.setName("JPanel3");
        ivjJPanel3.setLayout(null);
        getJPanel3().add(getb_selectRegion(), getb_selectRegion().getName());
        getJPanel3().add(getJLabel6(), getJLabel6().getName());
        getJPanel3().add(getJLabel7(), getJLabel7().getName());
        getJPanel3().add(gett_minX(), gett_minX().getName());
        getJPanel3().add(getJLabel71(), getJLabel71().getName());
        getJPanel3().add(gett_minY(), gett_minY().getName());
        getJPanel3().add(getJLabel61(), getJLabel61().getName());
        getJPanel3().add(getJLabel72(), getJLabel72().getName());
        getJPanel3().add(gett_maxX(), gett_maxX().getName());
        getJPanel3().add(gett_maxY(), gett_maxY().getName());
        getJPanel3().add(getJLabel711(), getJLabel711().getName());
        getJPanel3().add(getl_time(), getl_time().getName());
        getJPanel3().add(getJLabel82(), getJLabel82().getName());
        getJPanel3().add(getJLabel9(), getJLabel9().getName());
        getJPanel3().add(gett_cantCambios(), gett_cantCambios().getName());
        getJPanel3().add(getb_generaChange(), getb_generaChange().getName());
        getJPanel3().add(getJLabel12(), getJLabel12().getName());
        getJPanel3().add(gett_umbral(), gett_umbral().getName());
        getJPanel3().add(getjc_umbral(), getjc_umbral().getName());
        getJPanel3().add(getb_increseTime(), getb_increseTime().getName());
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjJPanel3;
  }

  /**
   * Return the JPanel4 property value.
   * @return javax.swing.JPanel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JPanel getJPanel4() {
    if (ivjJPanel4 == null) {
      try {
        ivjJPanel4 = new javax.swing.JPanel();
        ivjJPanel4.setName("JPanel4");
        ivjJPanel4.setLayout(null);
        getJPanel4().add(getJLabel62(), getJLabel62().getName());
        getJPanel4().add(getJLabel73(), getJLabel73().getName());
        getJPanel4().add(gett_minX1(), gett_minX1().getName());
        getJPanel4().add(getJLabel611(), getJLabel611().getName());
        getJPanel4().add(getJLabel721(), getJLabel721().getName());
        getJPanel4().add(gett_maxX1(), gett_maxX1().getName());
        getJPanel4().add(gett_maxY1(), gett_maxY1().getName());
        getJPanel4().add(getJLabel7111(), getJLabel7111().getName());
        getJPanel4().add(gett_minY1(), gett_minY1().getName());
        getJPanel4().add(getJLabel712(), getJLabel712().getName());
        getJPanel4().add(getJLabel10(), getJLabel10().getName());
        getJPanel4().add(getjr_timeSlice(), getjr_timeSlice().getName());
        getJPanel4().add(getjr_interval(), getjr_interval().getName());
        getJPanel4().add(getjc_time1(), getjc_time1().getName());
        getJPanel4().add(getJLabel8(), getJLabel8().getName());
        getJPanel4().add(getJLabel81(), getJLabel81().getName());
        getJPanel4().add(getjc_time2(), getjc_time2().getName());
        getJPanel4().add(getb_consult(), getb_consult().getName());
        getJPanel4().add(gett_seleccionRegion1(),
                         gett_seleccionRegion1().getName());
        getJPanel4().add(getjr_event(), getjr_event().getName());
        getJPanel4().add(getb_consultFile(), getb_consultFile().getName());
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjJPanel4;
  }

  /**
   * Return the JPanel5 property value.
   * @return javax.swing.JPanel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JPanel getJPanel5() {
    if (ivjJPanel5 == null) {
      try {
        ivjJPanel5 = new javax.swing.JPanel();
        ivjJPanel5.setName("JPanel5");
        ivjJPanel5.setLayout(null);
        getJPanel5().add(getJS_tableResult(), getJS_tableResult().getName());
        getJPanel5().add(getJLabel11(), getJLabel11().getName());
        getJPanel5().add(getJLabel111(), getJLabel111().getName());
        getJPanel5().add(getl_totalBloques(), getl_totalBloques().getName());
        getJPanel5().add(getl_totalElementos(), getl_totalElementos().getName());
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjJPanel5;
  }

  /**
   * Return the jr_event property value.
   * @return javax.swing.JRadioButton
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JRadioButton getjr_event() {
    if (ivjjr_event == null) {
      try {
        ivjjr_event = new javax.swing.JRadioButton();
        ivjjr_event.setName("jr_event");
        ivjjr_event.setText("Event");
        ivjjr_event.setBounds(215, 99, 57, 24);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjjr_event;
  }

  /**
   * Return the JRadioButton2 property value.
   * @return javax.swing.JRadioButton
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JRadioButton getjr_interval() {
    if (ivjjr_interval == null) {
      try {
        ivjjr_interval = new javax.swing.JRadioButton();
        ivjjr_interval.setName("jr_interval");
        ivjjr_interval.setText("Interval");
        ivjjr_interval.setBounds(122, 99, 66, 24);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjjr_interval;
  }

  /**
   * Return the JRadioButton1 property value.
   * @return javax.swing.JRadioButton
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JRadioButton getjr_timeSlice() {
    if (ivjjr_timeSlice == null) {
      try {
        ivjjr_timeSlice = new javax.swing.JRadioButton();
        ivjjr_timeSlice.setName("jr_timeSlice");
        ivjjr_timeSlice.setSelected(true);
        ivjjr_timeSlice.setText("Time Slice");
        ivjjr_timeSlice.setBounds(38, 99, 79, 24);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjjr_timeSlice;
  }

  /**
   * Return the JScrollPane2 property value.
   * @return javax.swing.JScrollPane
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JScrollPane getJS_tableResult() {
    if (ivjJS_tableResult == null) {
      try {
        ivjJS_tableResult = new javax.swing.JScrollPane();
        ivjJS_tableResult.setName("JS_tableResult");
        ivjJS_tableResult.setBounds(8, 12, 286, 184);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjJS_tableResult;
  }

  /**
   * Return the JScrollP_canva property value.
   * @return javax.swing.JScrollPane
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JScrollPane getJScrollP_canva() {
    if (ivjJScrollP_canva == null) {
      try {
        ivjJScrollP_canva = new javax.swing.JScrollPane();
        ivjJScrollP_canva.setName("JScrollP_canva");
        getJScrollP_canva().setViewportView(getkdbCanva());
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjJScrollP_canva;
  }

  /**
   * Return the JScrollPane1 property value.
   * @return javax.swing.JScrollPane
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JScrollPane getJScrollPane1() {
    if (ivjJScrollPane1 == null) {
      try {
        ivjJScrollPane1 = new javax.swing.JScrollPane();
        ivjJScrollPane1.setName("JScrollPane1");
        getJScrollPane1().setViewportView(getJList1());
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjJScrollPane1;
  }

  /**
   * Return the JTree1 property value.
   * @return javax.swing.JTree
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JTree getJTree1() {
    if (ivjJTree1 == null) {
      try {
        ivjJTree1 = new javax.swing.JTree();
        ivjJTree1.setName("JTree1");
        ivjJTree1.setBounds(0, 0, 78, 72);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjJTree1;
  }

  /**
   * Return the JTreeScrollPanel property value.
   * @return javax.swing.JScrollPane
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JScrollPane getJTreeScrollPanel() {
    if (ivjJTreeScrollPanel == null) {
      try {
        ivjJTreeScrollPanel = new javax.swing.JScrollPane();
        ivjJTreeScrollPanel.setName("JTreeScrollPanel");
        getJTreeScrollPanel().setViewportView(getJTree1());
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjJTreeScrollPanel;
  }

  /**
   * Return the kdbCanva property value.
   * @return KdbCanvas
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private KdbCanvas getkdbCanva() {
    if (ivjkdbCanva == null) {
      try {
        ivjkdbCanva = new KdbCanvas();
        ivjkdbCanva.setName("kdbCanva");
        ivjkdbCanva.setLocation(0, 0);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjkdbCanva;
  }

  /**
   * Return the l_rangox property value.
   * @return javax.swing.JLabel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JLabel getl_rangox() {
    if (ivjl_rangox == null) {
      try {
        ivjl_rangox = new javax.swing.JLabel();
        ivjl_rangox.setName("l_rangox");
        ivjl_rangox.setText("Rango X:");
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjl_rangox;
  }

  /**
   * Return the l_rangoy property value.
   * @return javax.swing.JLabel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JLabel getl_rangoy() {
    if (ivjl_rangoy == null) {
      try {
        ivjl_rangoy = new javax.swing.JLabel();
        ivjl_rangoy.setName("l_rangoy");
        ivjl_rangoy.setText("Rango Y:");
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjl_rangoy;
  }

  /**
   * Return the l_time property value.
   * @return javax.swing.JLabel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JLabel getl_time() {
    if (ivjl_time == null) {
      try {
        ivjl_time = new javax.swing.JLabel();
        ivjl_time.setName("l_time");
        ivjl_time.setText("0");
        ivjl_time.setBounds(195, 18, 37, 16);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjl_time;
  }

  /**
   * Return the l_totalBloques property value.
   * @return javax.swing.JLabel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JLabel getl_totalBloques() {
    if (ivjl_totalBloques == null) {
      try {
        ivjl_totalBloques = new javax.swing.JLabel();
        ivjl_totalBloques.setName("l_totalBloques");
        ivjl_totalBloques.setText("0");
        ivjl_totalBloques.setBounds(195, 201, 60, 16);
        ivjl_totalBloques.setHorizontalAlignment(javax.swing.SwingConstants.
                                                 RIGHT);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjl_totalBloques;
  }

  /**
   * Return the l_totalElementos property value.
   * @return javax.swing.JLabel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JLabel getl_totalElementos() {
    if (ivjl_totalElementos == null) {
      try {
        ivjl_totalElementos = new javax.swing.JLabel();
        ivjl_totalElementos.setName("l_totalElementos");
        ivjl_totalElementos.setText("0");
        ivjl_totalElementos.setBounds(195, 219, 60, 16);
        ivjl_totalElementos.setHorizontalAlignment(javax.swing.SwingConstants.
            RIGHT);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjl_totalElementos;
  }

  /**
   * Return the StatusMsg1 property value.
   * @return javax.swing.JLabel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JLabel getl_x() {
    if (ivjl_x == null) {
      try {
        ivjl_x = new javax.swing.JLabel();
        ivjl_x.setName("l_x");
        ivjl_x.setBorder(new javax.swing.border.EtchedBorder());
        ivjl_x.setText("X:");
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjl_x;
  }

  /**
   * Return the l_y property value.
   * @return javax.swing.JLabel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JLabel getl_y() {
    if (ivjl_y == null) {
      try {
        ivjl_y = new javax.swing.JLabel();
        ivjl_y.setName("l_y");
        ivjl_y.setBorder(new javax.swing.border.EtchedBorder());
        ivjl_y.setText("Y:");
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjl_y;
  }

  /**
   * Return the StatusBarPane1 property value.
   * @return javax.swing.JPanel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JPanel getPanelNorth() {
    if (ivjPanelNorth == null) {
      try {
        ivjPanelNorth = new javax.swing.JPanel();
        ivjPanelNorth.setName("PanelNorth");
        ivjPanelNorth.setLayout(new java.awt.GridBagLayout());

        java.awt.GridBagConstraints constraintsJLabel1 = new java.awt.
            GridBagConstraints();
        constraintsJLabel1.gridx = 0;
        constraintsJLabel1.gridy = 0;
        constraintsJLabel1.ipadx = 1;
        constraintsJLabel1.ipady = 11;
        getPanelNorth().add(getJLabel1(), constraintsJLabel1);

        java.awt.GridBagConstraints constraintst_largo = new java.awt.
            GridBagConstraints();
        constraintst_largo.gridx = 1;
        constraintst_largo.gridy = 0;
        constraintst_largo.fill = java.awt.GridBagConstraints.HORIZONTAL;
        constraintst_largo.weightx = 1.0;
        constraintst_largo.ipadx = 1;
        constraintst_largo.ipady = 7;
        getPanelNorth().add(gett_largo(), constraintst_largo);

        java.awt.GridBagConstraints constraintsJLabel2 = new java.awt.
            GridBagConstraints();
        constraintsJLabel2.gridx = 2;
        constraintsJLabel2.gridy = 0;
        constraintsJLabel2.ipadx = 1;
        constraintsJLabel2.ipady = 11;
        getPanelNorth().add(getJLabel2(), constraintsJLabel2);

        java.awt.GridBagConstraints constraintst_ancho = new java.awt.
            GridBagConstraints();
        constraintst_ancho.gridx = 3;
        constraintst_ancho.gridy = 0;
        constraintst_ancho.fill = java.awt.GridBagConstraints.HORIZONTAL;
        constraintst_ancho.weightx = 1.0;
        constraintst_ancho.ipadx = 1;
        constraintst_ancho.ipady = 7;
        getPanelNorth().add(gett_ancho(), constraintst_ancho);

        java.awt.GridBagConstraints constraintsb_create = new java.awt.
            GridBagConstraints();
        constraintsb_create.gridx = 4;
        constraintsb_create.gridy = 0;
        constraintsb_create.ipadx = 1;
        constraintsb_create.insets = new java.awt.Insets(0, 0, 0, 2);
        getPanelNorth().add(getb_create(), constraintsb_create);

        java.awt.GridBagConstraints constraintsJLabel3 = new java.awt.
            GridBagConstraints();
        constraintsJLabel3.gridx = 5;
        constraintsJLabel3.gridy = 0;
        constraintsJLabel3.insets = new java.awt.Insets(4, 4, 4, 4);
        getPanelNorth().add(getJLabel3(), constraintsJLabel3);

        java.awt.GridBagConstraints constraintst_sizeRegion = new java.awt.
            GridBagConstraints();
        constraintst_sizeRegion.gridx = 6;
        constraintst_sizeRegion.gridy = 0;
        constraintst_sizeRegion.fill = java.awt.GridBagConstraints.HORIZONTAL;
        constraintst_sizeRegion.weightx = 1.0;
        constraintst_sizeRegion.insets = new java.awt.Insets(4, 4, 4, 4);
        getPanelNorth().add(gett_sizeRegion(), constraintst_sizeRegion);

        java.awt.GridBagConstraints constraintsJLabel4 = new java.awt.
            GridBagConstraints();
        constraintsJLabel4.gridx = 7;
        constraintsJLabel4.gridy = 0;
        constraintsJLabel4.insets = new java.awt.Insets(4, 4, 4, 4);
        getPanelNorth().add(getJLabel4(), constraintsJLabel4);

        java.awt.GridBagConstraints constraintst_sizePoint = new java.awt.
            GridBagConstraints();
        constraintst_sizePoint.gridx = 8;
        constraintst_sizePoint.gridy = 0;
        constraintst_sizePoint.fill = java.awt.GridBagConstraints.HORIZONTAL;
        constraintst_sizePoint.weightx = 1.0;
        constraintst_sizePoint.insets = new java.awt.Insets(4, 4, 4, 4);
        getPanelNorth().add(gett_sizePoint(), constraintst_sizePoint);

        java.awt.GridBagConstraints constraintsb_setSize = new java.awt.
            GridBagConstraints();
        constraintsb_setSize.gridx = 9;
        constraintsb_setSize.gridy = 0;
        constraintsb_setSize.ipadx = 1;
        constraintsb_setSize.insets = new java.awt.Insets(4, 4, 4, 4);
        getPanelNorth().add(getb_setSize(), constraintsb_setSize);

        java.awt.GridBagConstraints constraintsl_rangox = new java.awt.
            GridBagConstraints();
        constraintsl_rangox.gridx = 10;
        constraintsl_rangox.gridy = 0;
        constraintsl_rangox.insets = new java.awt.Insets(4, 4, 4, 4);
        getPanelNorth().add(getl_rangox(), constraintsl_rangox);

        java.awt.GridBagConstraints constraintst_rangoX = new java.awt.
            GridBagConstraints();
        constraintst_rangoX.gridx = 11;
        constraintst_rangoX.gridy = 0;
        constraintst_rangoX.fill = java.awt.GridBagConstraints.HORIZONTAL;
        constraintst_rangoX.weightx = 1.0;
        constraintst_rangoX.insets = new java.awt.Insets(4, 4, 4, 4);
        getPanelNorth().add(gett_rangoX(), constraintst_rangoX);

        java.awt.GridBagConstraints constraintsl_rangoy = new java.awt.
            GridBagConstraints();
        constraintsl_rangoy.gridx = 12;
        constraintsl_rangoy.gridy = 0;
        constraintsl_rangoy.insets = new java.awt.Insets(4, 4, 4, 4);
        getPanelNorth().add(getl_rangoy(), constraintsl_rangoy);

        java.awt.GridBagConstraints constraintst_rangoY = new java.awt.
            GridBagConstraints();
        constraintst_rangoY.gridx = 13;
        constraintst_rangoY.gridy = 0;
        constraintst_rangoY.fill = java.awt.GridBagConstraints.HORIZONTAL;
        constraintst_rangoY.weightx = 1.0;
        constraintst_rangoY.insets = new java.awt.Insets(4, 4, 4, 4);
        getPanelNorth().add(gett_rangoY(), constraintst_rangoY);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjPanelNorth;
  }

  /**
   * Return the StatusBarPane property value.
   * @return javax.swing.JPanel
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JPanel getPanelSouth() {
    if (ivjPanelSouth == null) {
      try {
        ivjPanelSouth = new javax.swing.JPanel();
        ivjPanelSouth.setName("PanelSouth");
        ivjPanelSouth.setLayout(new java.awt.GridBagLayout());

        java.awt.GridBagConstraints constraintsl_x = new java.awt.
            GridBagConstraints();
        constraintsl_x.gridx = 1;
        constraintsl_x.gridy = 0;
        constraintsl_x.ipadx = 40;
        constraintsl_x.ipady = 7;
        getPanelSouth().add(getl_x(), constraintsl_x);

        java.awt.GridBagConstraints constraintsl_y = new java.awt.
            GridBagConstraints();
        constraintsl_y.gridx = 2;
        constraintsl_y.gridy = 0;
        constraintsl_y.ipadx = 40;
        constraintsl_y.ipady = 7;
        getPanelSouth().add(getl_y(), constraintsl_y);

        java.awt.GridBagConstraints constraintsb_insertManual = new java.awt.
            GridBagConstraints();
        constraintsb_insertManual.gridx = 3;
        constraintsb_insertManual.gridy = 0;
        constraintsb_insertManual.ipadx = 1;
        getPanelSouth().add(getb_insertManual(), constraintsb_insertManual);

        java.awt.GridBagConstraints constraintsb_insertAuto = new java.awt.
            GridBagConstraints();
        constraintsb_insertAuto.gridx = 5;
        constraintsb_insertAuto.gridy = 0;
        constraintsb_insertAuto.ipadx = 9;
        getPanelSouth().add(getb_insertAuto(), constraintsb_insertAuto);

        java.awt.GridBagConstraints constraintsb_utilizacion = new java.awt.
            GridBagConstraints();
        constraintsb_utilizacion.gridx = 8;
        constraintsb_utilizacion.gridy = 0;
        constraintsb_utilizacion.insets = new java.awt.Insets(4, 4, 4, 4);
        getPanelSouth().add(getb_utilizacion(), constraintsb_utilizacion);

        java.awt.GridBagConstraints constraintsJLabel5 = new java.awt.
            GridBagConstraints();
        constraintsJLabel5.gridx = 6;
        constraintsJLabel5.gridy = 0;
        constraintsJLabel5.insets = new java.awt.Insets(4, 4, 4, 4);
        getPanelSouth().add(getJLabel5(), constraintsJLabel5);

        java.awt.GridBagConstraints constraintst_time = new java.awt.
            GridBagConstraints();
        constraintst_time.gridx = 7;
        constraintst_time.gridy = 0;
        constraintst_time.fill = java.awt.GridBagConstraints.HORIZONTAL;
        constraintst_time.weightx = 1.0;
        constraintst_time.insets = new java.awt.Insets(4, 4, 4, 4);
        getPanelSouth().add(gett_time(), constraintst_time);

        java.awt.GridBagConstraints constraintst_insertpoint = new java.awt.
            GridBagConstraints();
        constraintst_insertpoint.gridx = 4;
        constraintst_insertpoint.gridy = 0;
        constraintst_insertpoint.fill = java.awt.GridBagConstraints.HORIZONTAL;
        constraintst_insertpoint.weightx = 1.0;
        constraintst_insertpoint.insets = new java.awt.Insets(4, 4, 4, 4);
        getPanelSouth().add(gett_insertpoint(), constraintst_insertpoint);

        java.awt.GridBagConstraints constraintsjc_version = new java.awt.
            GridBagConstraints();
        constraintsjc_version.gridx = 0;
        constraintsjc_version.gridy = 0;
        constraintsjc_version.fill = java.awt.GridBagConstraints.HORIZONTAL;
        constraintsjc_version.weightx = 1.0;
        constraintsjc_version.insets = new java.awt.Insets(4, 4, 4, 4);
        getPanelSouth().add(getjc_version(), constraintsjc_version);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjPanelSouth;
  }

  /**
   * Return the pTablePanel property value.
   * @return javax.swing.JTabbedPane
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JTabbedPane getpTablePanel() {
    if (ivjpTablePanel == null) {
      try {
        ivjpTablePanel = new javax.swing.JTabbedPane();
        ivjpTablePanel.setName("pTablePanel");
        ivjpTablePanel.insertTab("Visualizar El corte de las regiones", null,
                                 getJScrollP_canva(), null, 0);
        ivjpTablePanel.insertTab("Actualizacion del Arbol", null,
                                 getJP_treeAndOperation(), null, 1);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjpTablePanel;
  }

  /**
   * Return the JTextField2 property value.
   * @return javax.swing.JTextField
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JTextField gett_ancho() {
    if (ivjt_ancho == null) {
      try {
        ivjt_ancho = new javax.swing.JTextField();
        ivjt_ancho.setName("t_ancho");
        ivjt_ancho.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjt_ancho;
  }

  /**
   * Return the JTextField2 property value.
   * @return javax.swing.JTextField
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JTextField gett_cantCambios() {
    if (ivjt_cantCambios == null) {
      try {
        ivjt_cantCambios = new javax.swing.JTextField();
        ivjt_cantCambios.setName("t_cantCambios");
        ivjt_cantCambios.setBounds(152, 122, 62, 20);
        ivjt_cantCambios.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjt_cantCambios;
  }

  /**
   * Return the t_insertpoint property value.
   * @return javax.swing.JTextField
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JTextField gett_insertpoint() {
    if (ivjt_insertpoint == null) {
      try {
        ivjt_insertpoint = new javax.swing.JTextField();
        ivjt_insertpoint.setName("t_insertpoint");
        ivjt_insertpoint.setText("1000");
        ivjt_insertpoint.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjt_insertpoint;
  }

  /**
   * Return the JTextField1 property value.
   * @return javax.swing.JTextField
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JTextField gett_largo() {
    if (ivjt_largo == null) {
      try {
        ivjt_largo = new javax.swing.JTextField();
        ivjt_largo.setName("t_largo");
        ivjt_largo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjt_largo;
  }

  /**
   * Return the JTextField12 property value.
   * @return javax.swing.JTextField
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JTextField gett_maxX() {
    if (ivjt_maxX == null) {
      try {
        ivjt_maxX = new javax.swing.JTextField();
        ivjt_maxX.setName("t_maxX");
        ivjt_maxX.setBounds(167, 47, 42, 20);
        ivjt_maxX.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjt_maxX;
  }

  /**
   * Return the JTextField121 property value.
   * @return javax.swing.JTextField
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JTextField gett_maxX1() {
    if (ivjt_maxX1 == null) {
      try {
        ivjt_maxX1 = new javax.swing.JTextField();
        ivjt_maxX1.setName("t_maxX1");
        ivjt_maxX1.setBounds(153, 53, 42, 20);
        ivjt_maxX1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjt_maxX1;
  }

  /**
   * Return the JTextField111 property value.
   * @return javax.swing.JTextField
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JTextField gett_maxY() {
    if (ivjt_maxY == null) {
      try {
        ivjt_maxY = new javax.swing.JTextField();
        ivjt_maxY.setName("t_maxY");
        ivjt_maxY.setBounds(167, 69, 42, 20);
        ivjt_maxY.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjt_maxY;
  }

  /**
   * Return the JTextField1111 property value.
   * @return javax.swing.JTextField
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JTextField gett_maxY1() {
    if (ivjt_maxY1 == null) {
      try {
        ivjt_maxY1 = new javax.swing.JTextField();
        ivjt_maxY1.setName("t_maxY1");
        ivjt_maxY1.setBounds(153, 75, 42, 20);
        ivjt_maxY1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjt_maxY1;
  }

  /**
   * Return the JTextField1 property value.
   * @return javax.swing.JTextField
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JTextField gett_minX() {
    if (ivjt_minX == null) {
      try {
        ivjt_minX = new javax.swing.JTextField();
        ivjt_minX.setName("t_minX");
        ivjt_minX.setBounds(63, 48, 42, 20);
        ivjt_minX.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjt_minX;
  }

  /**
   * Return the JTextField13 property value.
   * @return javax.swing.JTextField
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JTextField gett_minX1() {
    if (ivjt_minX1 == null) {
      try {
        ivjt_minX1 = new javax.swing.JTextField();
        ivjt_minX1.setName("t_minX1");
        ivjt_minX1.setBounds(49, 54, 42, 20);
        ivjt_minX1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjt_minX1;
  }

  /**
   * Return the JTextField11 property value.
   * @return javax.swing.JTextField
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JTextField gett_minY() {
    if (ivjt_minY == null) {
      try {
        ivjt_minY = new javax.swing.JTextField();
        ivjt_minY.setName("t_minY");
        ivjt_minY.setBounds(63, 70, 42, 20);
        ivjt_minY.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjt_minY;
  }

  /**
   * Return the JTextField112 property value.
   * @return javax.swing.JTextField
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JTextField gett_minY1() {
    if (ivjt_minY1 == null) {
      try {
        ivjt_minY1 = new javax.swing.JTextField();
        ivjt_minY1.setName("t_minY1");
        ivjt_minY1.setBounds(49, 76, 42, 20);
        ivjt_minY1.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjt_minY1;
  }

  /**
   * Return the JTextField5 property value.
   * @return javax.swing.JTextField
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JTextField gett_rangoX() {
    if (ivjt_rangoX == null) {
      try {
        ivjt_rangoX = new javax.swing.JTextField();
        ivjt_rangoX.setName("t_rangoX");
        ivjt_rangoX.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjt_rangoX;
  }

  /**
   * Return the JTextField6 property value.
   * @return javax.swing.JTextField
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JTextField gett_rangoY() {
    if (ivjt_rangoY == null) {
      try {
        ivjt_rangoY = new javax.swing.JTextField();
        ivjt_rangoY.setName("t_rangoY");
        ivjt_rangoY.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjt_rangoY;
  }

  /**
   * Return the JButton11 property value.
   * @return javax.swing.JButton
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JButton gett_seleccionRegion1() {
    if (ivjt_seleccionRegion1 == null) {
      try {
        ivjt_seleccionRegion1 = new javax.swing.JButton();
        ivjt_seleccionRegion1.setName("t_seleccionRegion1");
        ivjt_seleccionRegion1.setText("Selecciona La Region:");
        ivjt_seleccionRegion1.setBounds(9, 14, 195, 27);
        ivjt_seleccionRegion1.setCursor(new java.awt.Cursor(java.awt.Cursor.
            HAND_CURSOR));
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjt_seleccionRegion1;
  }

  /**
   * Return the JTextField4 property value.
   * @return javax.swing.JTextField
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JTextField gett_sizePoint() {
    if (ivjt_sizePoint == null) {
      try {
        ivjt_sizePoint = new javax.swing.JTextField();
        ivjt_sizePoint.setName("t_sizePoint");
        ivjt_sizePoint.setText("82");
        ivjt_sizePoint.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjt_sizePoint;
  }

  /**
   * Return the JTextField3 property value.
   * @return javax.swing.JTextField
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JTextField gett_sizeRegion() {
    if (ivjt_sizeRegion == null) {
      try {
        ivjt_sizeRegion = new javax.swing.JTextField();
        ivjt_sizeRegion.setName("t_sizeRegion");
        ivjt_sizeRegion.setText("51");
        ivjt_sizeRegion.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjt_sizeRegion;
  }

  /**
   * Return the t_time property value.
   * @return javax.swing.JTextField
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JTextField gett_time() {
    if (ivjt_time == null) {
      try {
        ivjt_time = new javax.swing.JTextField();
        ivjt_time.setName("t_time");
        ivjt_time.setToolTipText("La velocidad para mostrar la mapa definida");
        ivjt_time.setText("0");
        ivjt_time.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjt_time;
  }

  /**
   * Return the t_umbral property value.
   * @return javax.swing.JTextField
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private javax.swing.JTextField gett_umbral() {
    if (ivjt_umbral == null) {
      try {
        ivjt_umbral = new javax.swing.JTextField();
        ivjt_umbral.setName("t_umbral");
        ivjt_umbral.setToolTipText(
            "La cantidad maxima del bloque que debe tener para producir una reconstruccion");
        ivjt_umbral.setText("4");
        ivjt_umbral.setBounds(169, 95, 40, 20);
        ivjt_umbral.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        // user code begin {1}
        // user code end
      }
      catch (java.lang.Throwable ivjExc) {
        // user code begin {2}
        // user code end
        handleException(ivjExc);
      }
    }
    return ivjt_umbral;
  }

  /**
   * Called whenever the part throws an exception.
   * @param exception java.lang.Throwable
   */
  private void handleException(java.lang.Throwable exception) {

    /* Uncomment the following lines to print uncaught exceptions to stdout */
    // System.out.println("--------- UNCAUGHT EXCEPTION ---------");
    // exception.printStackTrace(System.out);
  }

  /**
   * Inicializar la cantidad maxima de los puntos y las paginas dentro de una region.
   * Tambien el tiempo de espera.
   */
  public void indexSpatioTemporal_Initialize() {

    getkdbCanva().setCanvas(getl_x(), getl_y());
    Page.SIZEPOINT = Integer.parseInt(gett_sizePoint().getText());
    Page.SIZEREGION = Integer.parseInt(gett_sizeRegion().getText());
    Page.timeSlice = Integer.parseInt(gett_time().getText());

    getjc_time1().addItem("0");
    getjc_time2().addItem("0");
    getjc_umbral().addItem("d");
    getjc_umbral().addItem("Nivel");
    getjc_version().addItem("Skip List");
    getjc_version().addItem("Linked List");
    pointCount = 0;
    timeCount = 0;

    return;
  }

  /**
   * Initializes connections
   * @exception java.lang.Exception The exception description.
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private void initConnections() throws java.lang.Exception {
    // user code begin {1}
    // user code end
    getb_create().addActionListener(ivjEventHandler);
    getb_setSize().addActionListener(ivjEventHandler);
    getb_insertManual().addActionListener(ivjEventHandler);
    getb_insertAuto().addActionListener(ivjEventHandler);
    gett_time().addActionListener(ivjEventHandler);
    getb_utilizacion().addActionListener(ivjEventHandler);
    getb_increseTime().addActionListener(ivjEventHandler);
    getb_selectRegion().addActionListener(ivjEventHandler);
    gett_seleccionRegion1().addActionListener(ivjEventHandler);
    getb_consult().addActionListener(ivjEventHandler);
    getjr_timeSlice().addActionListener(ivjEventHandler);
    getjr_interval().addActionListener(ivjEventHandler);
    getb_generaChange().addActionListener(ivjEventHandler);
    gett_umbral().addActionListener(ivjEventHandler);
    getjr_event().addActionListener(ivjEventHandler);
    getb_consultFile().addActionListener(ivjEventHandler);
    getjc_version().addActionListener(ivjEventHandler);
    getjc_umbral().addActionListener(ivjEventHandler);
    connPtoP1SetTarget();
  }

  /**
   * Initialize the class.
   */
  /* WARNING: THIS METHOD WILL BE REGENERATED. */
  private void initialize() {
    try {
      // user code begin {1}
      // user code end
      setName("IndexSpatioTemporal");
      setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
      setSize(900, 600);
      setTitle("IndexSpatioTemporal");
      setContentPane(getJFrameContentPane());
      initConnections();
      connEtoC5();
    }
    catch (java.lang.Throwable ivjExc) {
      handleException(ivjExc);
    }
    // user code begin {2}
    // user code end
  }

  /**
   * imprimir el umbral actual
   */
  public void jc_umbral_ActionEvents() {
    String x = getjc_umbral().getSelectedItem().toString();
    if (x.equalsIgnoreCase("d")) {
      if (Util.ylList) {
        gett_umbral().setText(String.valueOf(Util.D));
      }
      else {
        gett_umbral().setText(String.valueOf(NodeTime.umbralBlock));
      }
    }
    else {
      gett_umbral().setText(String.valueOf(Util.MAX_LEVEL));

    }
    return;
  }

  /**
   * Comment
   */
  public void jc_version_ActionEvents() {
    if (getjc_version().getSelectedItem().toString().equalsIgnoreCase(
        "Skip List")) {
      Util.ylList = true;
    }
    else {
      Util.ylList = false;
    }
    return;
  }

  /**
   * Comment
   */
  public void jr_event_ActionEvents() {
    tipo_consulta = 2;
    getjr_timeSlice().setSelected(false);
    getjr_interval().setSelected(false);
  }

  /**
   * Seleccionar la opcion consulta intervalo
   */
  public void jr_interval_ActionEvents() {
    tipo_consulta = 1;
    getjr_timeSlice().setSelected(false);
    getjr_event().setSelected(false);
    return;
  }

  /**
   * Seleccionar la opcion consulta Time Slice
   */
  public void jr_timeSlice_ActionEvents() {
    tipo_consulta = 0;
    getjr_interval().setSelected(false);
    getjr_event().setSelected(false);
    return;
  }

  /**
   * Starts the application.
   * @param args an array of command-line arguments
   */
  public static void main(java.lang.String[] args) {
    try {
      /* Set native look and feel */
      UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
      /* Create the frame */
      IndexSpatioTemporal aIndexSpatioTemporal = new IndexSpatioTemporal();
      /* Add a windowListener for the windowClosedEvent */
      aIndexSpatioTemporal.addWindowListener(new java.awt.event.WindowAdapter() {
        public void windowClosed(java.awt.event.WindowEvent e) {
          System.exit(0);
        };
      });
      aIndexSpatioTemporal.setVisible(true);
    }
    catch (Throwable exception) {
      System.err.println("Exception occurred in main() of IndexSpatioTemporal");
      exception.printStackTrace(System.out);
    }
  }

  /**
   * Seleccionar la region de acuerdo al tipo de operacion
   */
  public void seleccionarRegion() {
    String ultima = ivjJTree1.getLastSelectedPathComponent().toString();
    StringTokenizer str = new StringTokenizer(ultima, ":");
    //Si el string no lleva el signo ":" significa que es un punto en la region
    if (str.countTokens() != 2) {
      JOptionPane.showMessageDialog(null,
                                    "Debe Seleccionar una region determinada",
                                    "Error!", JOptionPane.ERROR_MESSAGE);
    }
    else {
      String a = str.nextToken().trim(),
          b = str.nextToken().trim();
      int indexa = a.indexOf(","), indexb = b.indexOf(",");
      switch (seleccionregion) {
        case 0:
          gett_minX().setText(a.substring(0, indexa));
          gett_minY().setText(a.substring(indexa + 1));
          gett_maxX().setText(b.substring(0, indexb));
          gett_maxY().setText(b.substring(indexb + 1));
          break;
        case 1:
          gett_minX1().setText(a.substring(0, indexa));
          gett_minY1().setText(a.substring(indexa + 1));
          gett_maxX1().setText(b.substring(0, indexb));
          gett_maxY1().setText(b.substring(indexb + 1));
          break;
      }
    }

  }

  /**
   * Generar cambios de acuerdo a la region y el tiempo juntos con la cantidad
   * de cambios deseados
   */
  public void t_generaChange_ActionEvents() {
    int minx = Integer.parseInt(gett_minX().getText()),
        miny = Integer.parseInt(gett_minY().getText()),
        maxx = Integer.parseInt(gett_maxX().getText()),
        maxy = Integer.parseInt(gett_maxY().getText()),
        n,
        m,
        cantCambios = Integer.parseInt(gett_cantCambios().getText());

    int rank_x = Integer.parseInt(gett_rangoX().getText()),
        rank_y = Integer.parseInt(gett_rangoY().getText());

    //crear la region a consultar
    Zone x = new Zone(new Coordinate(maxx, maxy), new Coordinate(minx, miny));

    Vector v = kdbTree.getlastRefresh(x, 5000);

    DObject d, e;
    //Eliminar todos los elementos existentes en la lista
    //getcambios().removeAllElements();

    for (int i = 0; i < cantCambios; i++) {
      // Mover un objeto
      //Capturar un objeto alzar y eliminarlo
      d = (DObject) v.elementAt( (int) (Math.random() * v.size()));
      d = new DObject(d.getID() * -1, d.getX(), d.getY(), timeCount, 'e');
      kdbTree.insert(timeCount, d);
      //Mover a una region x
      e =
          new DObject(
          d.getID() * -1,
          (int) (Math.random() * rank_x),
          (int) (Math.random() * rank_y));
      kdbTree.insert(timeCount, e);
      getcambios().addElement(
          "T"
          + String.valueOf(timeCount)
          + " -> Movio d"
          + String.valueOf(Math.abs(d.getID()))
          + " de ("
          + String.valueOf(d.getX())
          + ","
          + String.valueOf(d.getY())
          + ") a( "
          + String.valueOf(e.getX())
          + ", "
          + String.valueOf(e.getY())
          + ")");
    }

    //Dibujar el arbol
    ivjJTree1 = kdbTree.constructJTreeForKDB();
    getJTreeScrollPanel().setViewportView(ivjJTree1);
  }

  /**
   * Seleccionar la desde el arbol de KDB para consultas
   */
  public void t_seleccionRegion1_ActionEvents() {
    seleccionregion = 1;
    seleccionarRegion();
    return;
  }

  /**
   * Actualizar el intervalo de tiempo de espera para la muestra animada de regiones
   */
  public void t_time_ActionEvents() {
    Page.timeSlice = Integer.parseInt(gett_time().getText());
    return;
  }

  /**
   * Comment
   */
  public void t_umbral_ActionEvents() {
    int n = Integer.parseInt(gett_umbral().getText());
    //si es la version de skiplist, actualize el d con parametro d
    // y max level de acuerdo al parametro
    if (Util.ylList) {
      if (getjc_umbral().getSelectedItem().toString().equals("d")) {
        Util.D = n;
      }
      else {
        Util.MAX_LEVEL = (short) n;
      }
    }
    else { //la version de lista simple
      NodeTime.umbralBlock = n;
    }
    return;
  }
}
